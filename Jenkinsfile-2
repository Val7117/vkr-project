pipeline {
    agent any
    environment {
        IP_PDR=credentials('my-ip-pdr')
        USER_PDR=credentials('my-username-pdr')
        GITHUB_TOKEN=credentials('my-github-token')
        COSIGN_PUBLIC_KEY=credentials('my-cosign-public-key')
    }
    parameters {
        string(name: 'GHCR_IMAGE_NAME', description: 'My GHCR image name')
    }
    stages {
        stage('Login to GitHub Container Registry') {
            steps {
                sh "echo ${GITHUB_TOKEN_PSW} | docker login ghcr.io -u ${GITHUB_TOKEN_USR} --password-stdin"
            }
        }
        stage('Verify Docker image') {
            steps {
                sh "cosign verify --key ${COSIGN_PUBLIC_KEY} ${GHCR_IMAGE_NAME}"
            }
        }
        stage('SSH to private Docker registry and pulling image') {
            steps {
                script {
                    def shellCmd1 = "docker pull ${env.GHCR_IMAGE_NAME}"
                    def shellCmd2 = "docker tag ${env.GHCR_IMAGE_NAME} localhost:5000/${env.GHCR_IMAGE_NAME}"
                    def shellCmd3 = "docker push localhost:5000/${env.GHCR_IMAGE_NAME}"
                    def instance = "${USER_PDR}@${IP_PDR}"

                    sshagent(['docker-registry-ssh']) {
                        sh "ssh -o StrictHostKeyChecking=no ${instance} ${shellCmd1} ${shellCmd2} ${shellCmd3}"
                    }
                }
            }
        }
    }
}